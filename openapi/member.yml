openapi: 3.0.0
info:
  title: Member API
  version: 0.0.1
servers:
  - url: http:localhost:8081
    description: local execution
paths:
  /member:
    summary: Register a member
    post:
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/update_member'
      responses:
        '201':
          description: A member is successfully registered
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response_member'
    put:
      summary: update member info
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/member"
      responses:
        '200':
          description: the memberId is successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response_member'
  /member/{memberId}:
    get:
      summary: get a Member by ID
      parameters:
        - name: memberId
          in: path
          required: true
          description: parameter that to difine member.
          schema:
            type: string
      responses:
        '200':
          description: member defined by ID
          content:
            appication/json:
              schema:
                $ref: '#/components/schemas/response_member'
    delete:
      summary: delete a member
      parameters:
        - name: memberId
          in: path
          required: true
          description: parameter that to difine to delete member book
          schema:
            type: integer
            format: int64
            minimum: 0
      responses:
        '204':
          description: NO content

components:
  schemas:
    member:
      type: object
      properties:
        memberName:
          type: string
          example: henohenomehezi
        mailAddress:
          type: string
          example: henoheno1@mohe.zi
        password:
          type: string
          example: password
        role:
          type: string
          example: TEAM_MEMBER
      required:
        - memberName
        - mailAddress
        - password
        - role
    response_member:
      type: object
      properties:
        memberId:
          example: 150e8400-er9b-41d4-a716-44h6554a0000
          pattern: '\b[0-9a-f]{8}\b-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-\b[0-9a-f]{12}\b'
        mailAddress:
          type: string
          example: henoheno1@mohe.zi
        role:
          type: string
          example: TEAM_MEMBER
    update_member:
      type: object
      properties:
        memberName:
          type: string
          example: henohenomehezi
        mailAddress:
          type: string
          example: henoheno1@mohe.zi
        password:
          type: string
          example: password
        role:
          type: string
          example: TEAM_MEMBER
